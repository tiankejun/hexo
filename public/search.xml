<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>VUE组册全局组件以及全局函数</title>
      <link href="/2018/05/16/VUE%E6%B3%A8%E5%86%8C%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6%E5%8F%8A%E5%85%A8%E5%B1%80%E5%87%BD%E6%95%B0/"/>
      <url>/2018/05/16/VUE%E6%B3%A8%E5%86%8C%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6%E5%8F%8A%E5%85%A8%E5%B1%80%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>根据公司需求，需要结合XX公司提供的地图包，开发一款可以直接使用的vue标签，用法与element UI相似，在组件内直接使用不用在此引用</p><h3 id="工程搭建"><a href="#工程搭建" class="headerlink" title="工程搭建"></a>工程搭建</h3><h4 id="1、初始化工程"><a href="#1、初始化工程" class="headerlink" title="1、初始化工程"></a>1、初始化工程</h4><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack <span class="built_in">riemann</span>-<span class="built_in">map</span></span><br></pre></td></tr></table></figure><p>后面根据提示一步一步输入即可，完成后<br>输入 <figure class="highlight plain"><figcaption><span>/F ``` 目录结构如下:</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">E:.</span><br><span class="line">│ package.json</span><br><span class="line">│ ...               // 其他文件</span><br><span class="line">│</span><br><span class="line">├─build             // webpack 打包配置</span><br><span class="line">├─config            // webpack 配置目录</span><br><span class="line">├─node_modules      // 存放第三方依赖模块</span><br><span class="line">├─src</span><br><span class="line">│  ├─components    //公共业务模块</span><br><span class="line">│  │  App.vue       //主要用于测试自己开发的子模块</span><br><span class="line">│  │  main.js       //创建vue 实例对象</span><br><span class="line">│  │</span><br><span class="line">│  └─assets         //暂无用</span><br><span class="line">│     logo.png</span><br><span class="line">│</span><br><span class="line">├─static            //静态资源</span><br><span class="line">│      .gitkeep</span><br><span class="line">│</span><br><span class="line">└─test              //测试</span><br><span class="line">    ├─e2e</span><br><span class="line">    │   ...</span><br><span class="line">    ├─unit</span><br><span class="line">    │   ...</span><br></pre></td></tr></table></figure></p><h4 id="2、修改工程目录"><a href="#2、修改工程目录" class="headerlink" title="2、修改工程目录"></a>2、修改工程目录</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">│ package.json</span><br><span class="line">│ ...               <span class="comment">// 其他文件</span></span><br><span class="line">│</span><br><span class="line">├─build             <span class="comment">// webpack 打包配置</span></span><br><span class="line">├─config            <span class="comment">// webpack 配置目录</span></span><br><span class="line">├─node_modules      <span class="comment">// 存放第三方依赖模块</span></span><br><span class="line">│   ...                 </span><br><span class="line">├─packages          <span class="comment">// 存放业务模块</span></span><br><span class="line">│   ...</span><br><span class="line">├─src</span><br><span class="line">│  │  App<span class="selector-class">.vue</span>       <span class="comment">//主要用于测试自己开发的子模块</span></span><br><span class="line">│  │  index<span class="selector-class">.js</span>      <span class="comment">//导出所有 vue 组件</span></span><br><span class="line">│  │  main<span class="selector-class">.js</span>       <span class="comment">//创建vue 实例对象</span></span><br><span class="line">│  │</span><br><span class="line">│  └─assets         <span class="comment">//暂无用</span></span><br><span class="line">│     logo.png</span><br><span class="line">│</span><br><span class="line">├─static            <span class="comment">//静态资源</span></span><br><span class="line">│      .gitkeep</span><br><span class="line">│</span><br><span class="line">└─test              <span class="comment">//测试</span></span><br><span class="line">    ├─e2e</span><br><span class="line">    │   ...</span><br><span class="line">    ├─unit</span><br><span class="line">    │   ...</span><br></pre></td></tr></table></figure><p>与刚开始的目录区别主要在于   </p><blockquote><p>1、去掉 1 中的 src下 components 这个目录<br>2、在 2 中 src 同级目录下添加 packages 目录，并且在src 下 新增 index.js文件用于导出所有模块的</p></blockquote><h3 id="编写业务逻辑"><a href="#编写业务逻辑" class="headerlink" title="编写业务逻辑"></a>编写业务逻辑</h3><h4 id="1、创建子模块目录"><a href="#1、创建子模块目录" class="headerlink" title="1、创建子模块目录"></a>1、创建子模块目录</h4><p>在 packages 目录下新建一个目录，此处新建的目录代表一个模块， 如：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">├─packages          <span class="comment">// 存放业务模块</span></span><br><span class="line">│  └─baseMap        <span class="comment">// 子模块</span></span><br><span class="line">│      │  index<span class="selector-class">.js</span>  <span class="comment">// 导出 vue 组件</span></span><br><span class="line">│      │</span><br><span class="line">│      └─src        <span class="comment">// 子模块 vue 业务逻辑</span></span><br><span class="line">│         main.vue</span><br></pre></td></tr></table></figure></p><h4 id="2、编写业务逻辑"><a href="#2、编写业务逻辑" class="headerlink" title="2、编写业务逻辑"></a>2、编写业务逻辑</h4><p>2.1、main.vue 如下<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><span class="template-variable">&#123;&#123;testWords&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">export default&#123;</span></span><br><span class="line"><span class="xml">  name: 'BaseMap',</span></span><br><span class="line"><span class="xml">  data() &#123;</span></span><br><span class="line"><span class="xml">    return &#123;</span></span><br><span class="line"><span class="xml">      testWords: 'Hello worlds'</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">  methods: &#123;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>2.2、index.js 如下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> BaseMap <span class="keyword">from</span> <span class="string">'./src/main'</span>;</span><br><span class="line"><span class="comment">/* istanbul ignore next */</span></span><br><span class="line">BaseMap.install = <span class="function"><span class="keyword">function</span>(<span class="params">Vue</span>) </span>&#123;</span><br><span class="line">  Vue.component(BaseMap.name, BaseMap);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> BaseMap;</span><br></pre></td></tr></table></figure></p><h3 id="将所有子组件实例化，并导出一个对象"><a href="#将所有子组件实例化，并导出一个对象" class="headerlink" title="将所有子组件实例化，并导出一个对象"></a>将所有子组件实例化，并导出一个对象</h3><p>src下面的index.js 如下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局函数</span></span><br><span class="line"><span class="keyword">import</span> Log <span class="keyword">from</span> <span class="string">'./log'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Automatically generated by './build/bin/build-entry.js' */</span></span><br><span class="line"><span class="keyword">import</span> BaseMap <span class="keyword">from</span> <span class="string">'../packages/baseMap/index.js'</span>;</span><br><span class="line"><span class="keyword">const</span> components = [</span><br><span class="line">    BaseMap</span><br><span class="line">];</span><br><span class="line"><span class="keyword">const</span> install = <span class="function"><span class="keyword">function</span>(<span class="params">Vue, opts = &#123;&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//循环实例VUE化组件</span></span><br><span class="line">    components.map(<span class="function"><span class="params">component</span> =&gt;</span> &#123;</span><br><span class="line">        Vue.component(component.name, component);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 全局方法</span></span><br><span class="line">    Vue.log = Vue.prototype.$log = Log</span><br><span class="line">    <span class="comment">// 使用如下： this.$log.funName</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/* istanbul ignore if */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span> !== <span class="string">'undefined'</span> &amp;&amp; <span class="built_in">window</span>.Vue) &#123;</span><br><span class="line">    install(<span class="built_in">window</span>.Vue);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//导出组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    version: <span class="string">'0.1.0'</span>,</span><br><span class="line">    install,</span><br><span class="line">    BaseMap</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>main.js 引入组件，并通过全局方法 Vue.use() 使用插件<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> MAP <span class="keyword">from</span> <span class="string">'./index.js'</span>    <span class="comment">//引入组件</span></span><br><span class="line">Vue.use(MAP)    <span class="comment">//使用组件</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="keyword">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  components: &#123; App &#125;,</span><br><span class="line">  template: <span class="string">'&lt;App/&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>App.vue 添加组件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--引入组件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base-map</span>&gt;</span><span class="tag">&lt;/<span class="name">base-map</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'App'</span>,</span></span><br><span class="line"><span class="undefined">  data() &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="undefined">  font-family: 'Avenir', Helvetica, Arial, sans-serif;</span></span><br><span class="line"><span class="undefined">  -webkit-font-smoothing: antialiased;</span></span><br><span class="line"><span class="undefined">  -moz-osx-font-smoothing: grayscale;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line"><span class="undefined">  margin-top: 60px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>如果页面出现出现 <code>Hello worlds</code> 则创建组件完成</p>]]></content>
      
      
        <tags>
            
            <tag> VUE公共组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>常用JavaScript函数</title>
      <link href="/2018/05/16/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
      <url>/2018/05/16/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<h3 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>];</span><br><span class="line"><span class="keyword">var</span> temp = unique(arr);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span><span class="params">(arr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = [], hash = &#123;&#125;;</span><br><span class="line">    <span class="comment">//elem: a;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, elem; (elem = arr[i]) != <span class="literal">null</span>; i++) &#123;</span><br><span class="line">        <span class="comment">//将数组中的值，当作hash对象中的key，判断当前hash中当前key值是否未true</span></span><br><span class="line">        <span class="comment">//不为true，则往变量result中push当前的key，</span></span><br><span class="line">        <span class="comment">//并且将hash中对应key的值设置为true</span></span><br><span class="line">        <span class="comment">//标识当前值已经放入临时数组result中</span></span><br><span class="line">        <span class="comment">//hash[a]</span></span><br><span class="line">        <span class="keyword">if</span> (!hash[elem]) &#123;</span><br><span class="line">            result.push(elem);</span><br><span class="line">            <span class="comment">//hash[a] = true;</span></span><br><span class="line">            hash[elem] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类型判断"><a href="#类型判断" class="headerlink" title="类型判断"></a>类型判断</h3><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call('');             // [object <span class="type">String</span>]</span><br><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call(1);              // [object <span class="type">Number</span>]</span><br><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call(true);           // [object <span class="type">Boolean</span>]</span><br><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call(undefined);      // [object <span class="type">Undefined</span>]</span><br><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call(null);           // [object <span class="type">Null</span>]</span><br><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call(new <span class="type">Function</span>()); // [object <span class="type">Function</span>]</span><br><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call(new <span class="type">Date</span>());     // [object <span class="type">Date</span>]</span><br><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call([]);             // [object <span class="type">Array</span>]</span><br><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call(new <span class="type">RegExp</span>());   // [object <span class="type">RegExp</span>]</span><br><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call(new <span class="type">Error</span>());    // [object <span class="type">Error</span>]</span><br><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call(document);       // [object <span class="type">HTMLDocument</span>]</span><br><span class="line"><span class="type">Object</span>.proto<span class="keyword">type</span>.toString.call(window);        //[object <span class="type">Window</span>] window是全局对象<span class="type">Window</span>的引用</span><br></pre></td></tr></table></figure><h3 id="对象合并"><a href="#对象合并" class="headerlink" title="对象合并"></a>对象合并</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、ES5 循环复制</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">target, source</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> obj <span class="keyword">in</span> source) &#123;</span><br><span class="line">        target[obj] = source[obj];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> target;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">2</span>、ES6 浅拷贝</span><br><span class="line"><span class="keyword">var</span> o1 = &#123; <span class="attr">a</span>: <span class="number">1</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> o2 = &#123; <span class="attr">b</span>: <span class="number">2</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> o3 = &#123; <span class="attr">c</span>: <span class="number">3</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = <span class="built_in">Object</span>.assign(o1, o2, o3);</span><br><span class="line"><span class="built_in">console</span>.log(obj); <span class="comment">// &#123; a: 1, b: 2, c: 3 &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(o1);  <span class="comment">// &#123; a: 1, b: 2, c: 3 &#125;, 注意目标对象自身也会改变。</span></span><br></pre></td></tr></table></figure><h3 id="对象深拷贝"><a href="#对象深拷贝" class="headerlink" title="对象深拷贝"></a>对象深拷贝</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">name</span>:<span class="number">123</span>&#125;</span><br><span class="line"><span class="built_in">JSON</span>.stringify(obj)</span><br><span class="line"><span class="keyword">let</span> objtemp = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(obj))</span><br><span class="line"><span class="built_in">Object</span>.assign(objtemp, &#123;<span class="attr">first</span>: <span class="string">'Time'</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj) <span class="comment">// &#123;name:123&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(objTemp) <span class="comment">// &#123;name: 123, firstName: "Tian"&#125;</span></span><br></pre></td></tr></table></figure><h3 id="数组深拷贝"><a href="#数组深拷贝" class="headerlink" title="数组深拷贝"></a>数组深拷贝</h3><h4 id="ES5"><a href="#ES5" class="headerlink" title="ES5"></a>ES5</h4><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let a1 = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line">let a2 = a1.concat();</span><br><span class="line"></span><br><span class="line">a2[<span class="number">0</span>] = <span class="number">2</span>;</span><br><span class="line">a1 <span class="comment">// [1, 2]</span></span><br></pre></td></tr></table></figure><h4 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h4><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> items = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">let</span> itemsTemp = [...items];</span><br><span class="line"></span><br><span class="line">temsCopy.<span class="keyword">push</span>(<span class="number">5</span>)</span><br><span class="line">console.<span class="built_in">log</span>(items) <span class="comment">// [1, 2, 3, 4]</span></span><br><span class="line">console.<span class="built_in">log</span>(itemsTemp) <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*display:flex; 兼容IE11以上*/</span></span><br><span class="line"><span class="selector-class">.mod-middle</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>:flex;</span><br><span class="line">  <span class="attribute">align-items</span>:center;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*css3 transform; 兼容IE9以上*/</span></span><br><span class="line"><span class="selector-class">.mod-middle</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>:fixed;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> js常用函数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>图解系统项目总结</title>
      <link href="/2018/03/27/%E5%9B%BE%E8%A7%A3%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
      <url>/2018/03/27/%E5%9B%BE%E8%A7%A3%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<h2 id="项目描述"><a href="#项目描述" class="headerlink" title="项目描述"></a>项目描述</h2><p>此项目是一个安防行业的项目，主要针对刑侦、技侦、公安、交警用户，为其提供根据目标（人体、人脸、车、非机动车等，以下简称目标）信息进行图片、视频查看、处理、检索的一套系统。</p><h3 id="痛处"><a href="#痛处" class="headerlink" title="痛处"></a>痛处</h3><p>当立项的时候，为了赶时间，赶进度，将各个子系统一由iframe嵌入的方式引用，做到一半的时候，发现以下问题：<br>1、各子系统编码规范不统一<br>2、各子系统使用技术不一致<br>3、各子系统技术文档、接口文档缺失，给维护系统带来更大的维护成本<br>4 、项目开始只是只是新需求用的vuejs， 之前有的功能直接通过iframe的方式嵌入进来，后续因为嵌入了3-4个子系统，项目维护很困难，最终决定所有功能重做</p><h3 id="重生"><a href="#重生" class="headerlink" title="重生"></a>重生</h3><p>为了跟进时代的潮流（组件化开发提高效率），最终项目采用vuejs渐进框架，vue-router做路由，配合webpack打包，使用git做代码仓库，利用less编写页面样式，使用Echart 进行静态或动态数据统计数据展示，使用Element UI前端UI框架</p><h3 id="本人负责的部分"><a href="#本人负责的部分" class="headerlink" title="本人负责的部分"></a>本人负责的部分</h3><p>主要负责<br>1、人脸检索库（第一版）<br>2、数据仓库框架搭建以及部分子模块<br>3、系统运维<br>4、车辆刻画<br>5、车辆技战法框架搭建以及部分子模块<br>的实现</p><h3 id="模块释义"><a href="#模块释义" class="headerlink" title="模块释义"></a>模块释义</h3><p>人脸检索库：添加人员信息到人员库，包括（图像、以及个人基本信息）；  </p><p>数据仓库：将摄像头抓拍的图片数据和经过录像处理后图片数据分为图文模式和列表模式两种模式展示，以及根据目标特征进行检索；  </p><p>系统运维：统计系统中的数据以图表的形式展示（包括目标数量统计、CPU、GPU实时信息统计）</p><p>车辆刻画：根据用户上传图片或者从数据仓库带过来的图片（一般是模糊不清晰的图片）外观，选择对应的条件，进行条件筛选，最终确定该车型、车款</p><p>车辆技战法：查询车辆某一种状态下车辆数据信息（例如：未系安全带）</p><h3 id="遇到的问题："><a href="#遇到的问题：" class="headerlink" title="遇到的问题："></a>遇到的问题：</h3><p>1、起初通过iframe嵌入的方式，存在iframe之间通讯问题，<br>例如，点击子组件一个按钮，弹出一个消息，这个消息要在父组件显示  </p><p>2、随着项目越来越大，编译速度和页面加载速度变慢问题<br>最长编译一次时间需要30s - 40s 时间，这对于开发来说无疑是噩梦</p><p>3、因为系统中存在权限控制，但是之前用的是jquery进行权限控制，既然使用的是数据驱动模式，如果在直接操作dom则违背vue数据驱动模式</p><p>4、系统中涉及到跨页勾选数据问题</p><p>5、由于页面复杂引入组件比较多导致页面加载慢从而影响用户体验</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>1、iframe数据通讯问题<br><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">发送数据</span><br><span class="line"><span class="built_in">window</span>.top.postMessage(data, <span class="built_in">url</span>);</span><br><span class="line"><span class="attribute">data</span>: 数据， </span><br><span class="line"><span class="built_in">url</span>： 发送到指定地址，</span><br><span class="line">    <span class="number">1</span>、如果是指定地址：<span class="attribute">http</span>:<span class="comment">//192.168.60.48:8080, 此时只有这个地址能收到信息，  </span></span><br><span class="line">    <span class="number">2</span>、如果是 <span class="string">"*"</span> 外层所有域都能收到</span><br><span class="line"></span><br><span class="line">监听：</span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"message"</span>, getData, <span class="literal">false</span>); <span class="comment">// 高级浏览器</span></span><br><span class="line"><span class="built_in">window</span>.attachEvent(<span class="string">"onmessage"</span>, getData);  <span class="comment">//IE</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span> (<span class="params">e</span>)</span>&#123;</span><br><span class="line"> <span class="keyword">var</span> e = e || event;</span><br><span class="line"> <span class="built_in">console</span>.log(e.data) <span class="comment">// 这里接收发送的数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2、提高编译和加载效率问题<br>我结合DllReferencePlugin 插件将webpack中引用的第三方包进行统一打包，在页面进行引用，这样webpack在编译打包的时候就不会将第三方包重新打包，有效提高编译效率，页面引用，这个第三包以后会被缓存下来，避免不必要的网络请求</p><p>3、系统中度权限问题<br>之前使用的是query来控制权限，最后我提议使用vue中的指令来控制按钮的权限，在组件加载的时候，获取按钮上绑定的指令值，根据值来判断这个按钮是否显示</p><p>4、跨页选择问题<br>获取后台接口的数据后，给每个对象添加<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">checked:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><p>字段，并缓存下来，以后每次勾选或者取消勾选操作都已指向缓存数据  </p><p>5、页面加载慢问题<br>使用webpack ＋ vue－router 实现懒加载，提高页面加载效率，提升用户体验 </p><p>5.1、添加对应的webpack 配置<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">output</span>: &#123;</span><br><span class="line">    <span class="attribute">chunkFilename</span>: <span class="string">'[id].[chunkhash].js'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>5.2、文件引用统一使用路由懒加载模式<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">components</span>: &#123;</span><br><span class="line">    <span class="attribute">treeMemu</span>: function (resolve) &#123;</span><br><span class="line">      <span class="built_in">require</span>([<span class="string">'./tset.vue'</span>], resolve)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
        <tags>
            
            <tag> 项目总结 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/03/26/hello-world/"/>
      <url>/2018/03/26/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
